<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1210, 32</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        D///+B////gf///8P////D////5///////8=
</value>
  </data>
  <metadata name="guna2DragControl1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1333, 32</value>
  </metadata>
  <metadata name="guna2Elipse2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1491, 32</value>
  </metadata>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1614, 32</value>
  </metadata>
</root>